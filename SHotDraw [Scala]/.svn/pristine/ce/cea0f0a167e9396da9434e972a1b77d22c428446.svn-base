/*
 * @(#)Test.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	ï¿½ by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.test.standard

import java.awt.Point
import java.util.ArrayList
import java.util.List
import junit.framework.TestCase
import org.jhotdraw.figures.PolyLineFigure
import org.jhotdraw.figures.RectangleFigure
import org.jhotdraw.framework.Figure
import org.jhotdraw.framework.FigureEnumeration
import org.jhotdraw.standard.FigureEnumerator
import org.jhotdraw.standard.StandardFigureSelection

/*
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/
// JUnitDoclet begin javadoc_class
/**
 * TestCase StandardFigureSelectionTest is generated by
 * JUnitDoclet to hold the tests for StandardFigureSelection.
 * @see org.jhotdraw.standard.StandardFigureSelection
 */
class StandardFigureSelectionTest(name: String) extends TestCase(name) {

  /**
   * Factory method for instances of the class to be tested.
   */
  def createInstance: StandardFigureSelection = {
    val l: List[Figure] = new ArrayList[Figure]
    l.add(new RectangleFigure(new Point(10, 10), new Point(100, 100)))
    l.add(new PolyLineFigure(20, 20))
    val fenum: FigureEnumeration = new FigureEnumerator(l)
    return new StandardFigureSelection(fenum, l.size)
  }

  /**
   * Method setUp is overwriting the framework method to
   * prepare an instance of this TestCase for a single test.
   * It's called from the JUnit framework only.
   */
  override protected def setUp {
    super.setUp
    standardfigureselection = createInstance
  }

  /**
   * Method tearDown is overwriting the framework method to
   * clean up after each single test of this TestCase.
   * It's called from the JUnit framework only.
   */
  override protected def tearDown {
    standardfigureselection = null
    super.tearDown
  }

  /**
   * Method testGetType is testing getType
   * @see org.jhotdraw.standard.StandardFigureSelection#getType()
   */
  def testGetType {
  }

  /**
   * Method testGetData is testing getData
   * @see org.jhotdraw.standard.StandardFigureSelection#getData(java.lang.String)
   */
  def testGetData {
  }

  /**
   * Method testDuplicateFigures is testing duplicateFigures
   * @see org.jhotdraw.standard.StandardFigureSelection#duplicateFigures(org.jhotdraw.framework.FigureEnumeration, int)
   */
  def testDuplicateFigures {
  }

  /**
   * JUnitDoclet moves marker to this method, if there is not match
   * for them in the regenerated code and if the marker is not empty.
   * This way, no test gets lost when regenerating after renaming.
   * <b>Method testVault is supposed to be empty.</b>
   */
  def testVault {
  }

  private var standardfigureselection: StandardFigureSelection = null
}

