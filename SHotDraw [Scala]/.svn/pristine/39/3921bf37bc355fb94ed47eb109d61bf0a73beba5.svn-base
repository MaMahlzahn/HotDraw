/*
 * @(#)Test.java
 *
 * Project:		JHotdraw - a GUI framework for technical drawings
 *				http://www.jhotdraw.org
 *				http://jhotdraw.sourceforge.net
 * Copyright:	ï¿½ by the original author(s) and all contributors
 * License:		Lesser GNU Public License (LGPL)
 *				http://www.opensource.org/licenses/lgpl-license.html
 */
package org.jhotdraw.test.framework

import org.jhotdraw.framework.FigureAttributeConstant
import junit.framework.TestCase

// JUnitDoclet begin import
// JUnitDoclet end import
/*
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/
// JUnitDoclet begin javadoc_class
/**
 * TestCase FigureAttributeConstantTest is generated by
 * JUnitDoclet to hold the tests for FigureAttributeConstant.
 * @see org.jhotdraw.framework.FigureAttributeConstant
 */
class FigureAttributeConstantTest(name: String) extends TestCase(name) {

  /**
   * Factory method for instances of the class to be tested.
   */
  def createInstance: FigureAttributeConstant = {
    new FigureAttributeConstant("test_property")
  }

  /**
   * Method setUp is overwriting the framework method to
   * prepare an instance of this TestCase for a single test.
   * It's called from the JUnit framework only.
   */
  override protected def setUp {
    super.setUp
    figureattributeconstant = createInstance
  }

  /**
   * Method tearDown is overwriting the framework method to
   * clean up after each single test of this TestCase.
   * It's called from the JUnit framework only.
   */
  override protected def tearDown {
    figureattributeconstant = null
    super.tearDown
  }

  /**
   * Method testGetName is testing getName
   * @see org.jhotdraw.framework.FigureAttributeConstant#getName()
   */
  def testGetName {
  }

  /**
   * Method testGetID is testing getID
   * @see org.jhotdraw.framework.FigureAttributeConstant#getID()
   */
  def testGetID {
  }

  /**
   * Method testEquals is testing equals
   * @see org.jhotdraw.framework.FigureAttributeConstant#equals(java.lang.Object)
   */
  def testEquals {
  }

  /**
   * Method testHashCode is testing hashCode
   * @see org.jhotdraw.framework.FigureAttributeConstant#hashCode()
   */
  def testHashCode {
  }

  /**
   * Method testGetConstant is testing getConstant
   * @see org.jhotdraw.framework.FigureAttributeConstant#getConstant(java.lang.String)
   */
  def testGetConstant {
  }

  /**
   * JUnitDoclet moves marker to this method, if there is not match
   * for them in the regenerated code and if the marker is not empty.
   * This way, no test gets lost when regenerating after renaming.
   * <b>Method testVault is supposed to be empty.</b>
   */
  def testVault {
  }

  private var figureattributeconstant: FigureAttributeConstant = null
}

